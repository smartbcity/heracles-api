image: smartbcity/gitlab-ci-kotlin-all:latest

stages:
  - build
  - verify
  - version
  - package
  - push

variables:
  BRANCH_VERSION: "experimental"
  MASTER_VERSION: "next"
  PROFILES_ACTIVE: "gitlab"

.version:
  stage: version
  image: smartbcity/gitlab-ci-semantic-versioning:latest
  script:
    - make -f /opt/city.smartb/semantic-versioning/Makefile next_version >> version.build
  artifacts:
    paths:
      - version*

.package:
  stage: package
  script:
    - export VERSION_BUILD=$(cat version.build)
    - make package -e VERSION=${VERSION_BUILD}

.push:
  stage: push
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - export VERSION_BUILD=$(cat version.build)
    - make push -e VERSION=${VERSION_BUILD}

.push-latest:
  stage: push
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin
  script:
    - export VERSION_BUILD=$(cat version.build)
    - make push-latest -e VERSION=${VERSION_BUILD}

.onlyBranch: &onlyBranch
  only:
    refs:
      - branches
  except:
    refs:
      - master

.onlyMaster: &onlyMaster
  only:
    refs:
      - master

version-branch:
  <<: *onlyBranch
  extends: .version
  stage: version
  after_script:
    - echo $BRANCH_VERSION > version.build
    - echo "//////////////////////////////"
    - echo "Version is " $(cat version.build)
    - echo "//////////////////////////////"

package-branch:
  <<: *onlyBranch
  extends: .package
  artifacts:
    paths:
      - version*

push-branch:
  <<: *onlyBranch
  extends: .push
  when: manual

version-master:
  <<: *onlyMaster
  extends: .version
  stage: version
  after_script:
    - echo $MASTER_VERSION > version.build
    - echo "//////////////////////////////"
    - echo "Version is " $(cat version.build)
    - echo "//////////////////////////////"

package-master:
  <<: *onlyMaster
  extends: .package
  when: manual
  artifacts:
    paths:
      - version*

push-master:
  <<: *onlyMaster
  extends: .push
  when: manual

version-tags:
  extends: .version
  only:
    - tags

package-tags:
  extends: .package
  only:
    - tags

push-tags:
  extends: .push
  only:
    - tags

push-latest-tags:
  extends: .push-latest
  only:
    - tags
